buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

// 子模块通用配置
subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'idea'
//    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    ext {
        compileJava.options.encoding = 'UTF-8'
        compileTestJava.options.encoding = 'UTF-8'
    }
    group 'com.shiyajian'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    repositories {
        mavenLocal()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        mavenCentral()
    }


    dependencyManagement {
        imports {
            // @see {https://github.com/spring-cloud/spring-cloud-release/blob/master/spring-cloud-dependencies/pom.xml}
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            // @see {https://github.com/spring-projects/spring-boot/blob/master/spring-boot-project/spring-boot-dependencies/pom.xml}
            // or @see {https://docs.spring.io/spring-boot/docs/2.1.0.RELEASE/reference/htmlsingle/#appendix-dependency-versions}
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
        }
    }

    // 配置所有子项目的依赖，大部分是工具类和辅助工具
    // 原则：如果能从上面dependencyManagement查到版本的，都使用implementation继承，找不到的使用最新版本
    dependencies {

        implementation(
                "commons-beanutils:commons-beanutils:$beanUtilsVersion",
                "com.github.ben-manes.caffeine:guava",
                "org.apache.commons:commons-lang3",
                "joda-time:joda-time"
        )

        // why `debugImplementation` can't work ?? I don't know

        compileOnly(
                "com.google.code.findbugs:jsr305:$findbugsVersion",
                "org.projectlombok:lombok",
                "javax.servlet:javax.servlet-api"
        )

        testImplementation(
                "junit:junit",
                "org.springframework.boot:spring-boot-starter-test"
        )
    }

    // 全局排除tomcat，是web工程的引用undertow作为web容器
    configurations {
        all*.exclude group: "org.springframework.boot:spring-boot-starter-tomcat"
    }

    // 自定义某个依赖的版本。
    // 官方不建议复写版本，因为spring每个发行版本中的第三方依赖都是进过权衡和测试的。
    ext['lombok.version'] = "$lombokVersion"
}
