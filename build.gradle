buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
    }
}

// sub-project common settings
subprojects {

    group "com.shiyajian"

    apply plugin: "java"
    apply plugin: "io.spring.dependency-management"
    ext {
        compileJava.options.encoding = "UTF-8"
        compileTestJava.options.encoding = "UTF-8"
    }
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        mavenCentral()
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:$springBootVersion"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
            mavenBom "org.springframework.cloud:spring-cloud-alibaba-dependencies:$alibabaVersion"
        }
    }

    dependencies {

        if(project.name !='common-core'){
            compile project(':commons:common-core')
        }
        
        implementation "commons-beanutils:commons-beanutils:$beanUtilsVersion"
        implementation "commons-io:commons-io:$commonsIOVersion"
        implementation "com.github.ben-manes.caffeine:guava"
        implementation "org.apache.commons:commons-lang3"
        implementation "joda-time:joda-time"

        compileOnly "org.projectlombok:lombok"
        compileOnly "com.google.code.findbugs:jsr305:$findbugsVersion"
        compileOnly "javax.servlet:javax.servlet-api"
        compileOnly "org.projectlombok:lombok"
        annotationProcessor 'org.projectlombok:lombok'

    }

    def profile = profile ?: "dev"
    processResources {
        filter org.apache.tools.ant.filters.ReplaceTokens, tokens: [profile: profile]
    }
   

}
